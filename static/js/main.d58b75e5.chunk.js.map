{"version":3,"sources":["components/Header.js","pages/main.js","classes.js","pages/ShoppingList.js","components/Map.js","pages/ShopsMapPage.js","pages/home.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","SimpleBottomNavigation","classes","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","component","Link","label","to","icon","noValidate","autoComplete","TextField","id","Button","variant","color","theme","m","margin","p","padding","verticalFlex","display","flexDirection","flex","flexItemMain","flexShrink","flexGrow","overflowY","flexItemSecondary","formGroup","spacing","buttonCustom","borderRadius","CheckboxesGroup","milk","bread","paper","state","setState","handleChange","target","name","checked","Typography","type","defaultValue","InputLabelProps","shrink","Paper","map","product","FormGroup","FormControlLabel","control","Checkbox","size","FormControl","RadioGroup","row","aria-label","Radio","labelPlacement","Divider","fullWidth","ShopsMap","ref","e","googleMap","defaultZoom","defaultCenter","lat","lng","this","props","markers","marker","position","Component","forwardRef","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","ShopsMapPage","shops","travelTime","workTime","address","crowd","inStock","selectShop","console","log","s","onClick","cv","marginLeft","width","backgroundColor","createMuiTheme","palette","primary","main","dark","light","secondary","background","overrides","MuiButton","MuiButtonBase","baseUrl","document","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","App","ThemeProvider","exact","path","MainPage","Home","ShoppingList","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d58b75e5.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n    },\n});\n\nexport default function SimpleBottomNavigation() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    return (\n        <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n            }}\n            showLabels\n            className={classes.root}\n        >\n            <BottomNavigationAction component={Link} label=\"Home\" to=\"/home\" icon={<HomeIcon/>}/>\n            <BottomNavigationAction label=\"Stores\" component={Link} to=\"/stores\" icon={<FavoriteIcon/>}/>\n            <BottomNavigationAction component={Link} label=\"List\" to=\"/list\" icon={<ListAltIcon/>}/>\n            <BottomNavigationAction component={Link} label=\"Profile\" to=\"/profile\" icon={<PersonIcon/>}/>\n        </BottomNavigation>\n    )\n}\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\n\nexport default () => {\n  return (\n    <div>\n      <form noValidate autoComplete=\"off\">\n        <TextField id=\"standard-basic\" label=\"Login\" />\n      </form>\n      <form noValidate autoComplete=\"off\">\n        <TextField id=\"filled-basic\" label=\"Password\" />\n      </form>\n      <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/home\">\n        Sign In\n      </Button>\n    </div>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  m: {\n    margin: 16\n  },\n  p: {\n    padding: 16\n  },\n  verticalFlex: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  flex: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  flexItemMain: {\n    flexShrink: 1,\n    flexGrow: 1,\n    overflowY: 'auto'\n  },\n  flexItemSecondary: {\n    flexShrink: 0,\n  },\n  formGroup: {\n    margin: theme.spacing(3),\n  },\n  buttonCustom: {\n    borderRadius: 3,\n    color: \"primary\",\n  }\n}));\n\nexport default useStyles","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport Divider from '@material-ui/core/Divider'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport { Typography } from '@material-ui/core'\nimport useStyles from '../classes'\n\nexport default function CheckboxesGroup() {\n  const classes = useStyles()\n  const [state, setState] = React.useState({\n    milk: false,\n    bread: false,\n    paper: false,\n  })\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked })\n  }\n\n  return (\n    <div className={[classes.verticalFlex, classes.p]}>\n      <h2><Typography color=\"\" variant=\"h5\">Shopping List</Typography></h2>\n      <form noValidate>\n        <TextField\n          id=\"date\"\n          label=\"Date\"\n          type=\"date\"\n          defaultValue=\"2020-04-11\"\n          // className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </form>\n\n      <Paper className={[classes.flexItemMain]}>\n        <div>\n          {['Eggs', 'Pasta', 'Toilet rolls'].map(product => (\n            <FormGroup className={classes.formGroup}>\n              <div className={classes.flex}>\n                <FormControlLabel\n                  className={classes.flexItemMain}\n                  control={<Checkbox color=\"primary\" checked={state[product]} onChange={handleChange} name={product}/>}\n                  label={product}\n                />\n                <TextField id={`${product}-qty`} label=\"Qty\" size=\"small\"/>\n              </div>\n              <div>\n                <Typography color=\"textSecondary\" variant=\"caption\">Indicate stock level for this item</Typography>\n                <FormControl component=\"fieldset\">\n                  {/*<FormLabel component=\"legend\">Indicate stock level for this item</FormLabel>*/}\n                  <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\n                    <FormControlLabel\n                      value=\"0\"\n                      control={<Radio color=\"primary\"/>}\n                      label=\"0%\"\n                      labelPlacement=\"start\"\n                    />\n                    <FormControlLabel\n                      value=\"25\"\n                      control={<Radio color=\"primary\"/>}\n                      label=\"25%\"\n                      labelPlacement=\"start\"\n                    />\n                    <FormControlLabel\n                      value=\"50\"\n                      control={<Radio color=\"primary\"/>}\n                      label=\"50%\"\n                      labelPlacement=\"start\"\n                    />\n                    <FormControlLabel\n                      value=\"75\"\n                      control={<Radio color=\"primary\"/>}\n                      label=\">75%\"\n                      labelPlacement=\"start\"\n                    />\n                  </RadioGroup>\n                </FormControl>\n              </div>\n              <Divider/>\n            </FormGroup>\n          ))}\n        </div>\n      </Paper>\n\n      <div className={classes.m}>\n        <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/stores\" fullWidth>\n          Done\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { compose, withProps } from \"recompose\"\nimport { GoogleMap, Marker, withScriptjs, withGoogleMap } from \"react-google-maps\"\n\nexport class ShopsMap extends React.Component{\n  render() {\n    return (\n      <GoogleMap\n        ref={e => this.googleMap = e}\n        defaultZoom={15}\n        defaultCenter={{ lat: 51.522114, lng: -0.157575 }}\n      >\n        {this.props.markers && this.props.markers.map(marker => (\n          <Marker position={{ lat: marker.lat, lng: marker.lng }} />\n        ))}\n      </GoogleMap>\n    )\n  }\n}\n\nexport default React.forwardRef(compose(\n  withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `100%` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n  }),\n  withScriptjs,\n  withGoogleMap\n)(ShopsMap))","import * as React from 'react'\nimport ShopsMap from '../components/Map'\nimport { Typography } from '@material-ui/core'\nimport Divider from '@material-ui/core/Divider'\n\nexport default class ShopsMapPage extends React.Component {\n  map = React.createRef();\n\n  state = {\n    shops: [\n      {\n        lat: 51.522114,\n        lng: -0.157575,\n        name: 'Tesco Superstore',\n        travelTime: 139,\n        workTime: 'Open Now | Closes 10:00PM',\n        address: '15 Great Suffolk St',\n        crowd: [3, 4, 5, 9, 7, 8],\n        inStock: '3/5',\n      },\n      {\n        lat: 51.513117,\n        lng: -0.157235,\n        name: 'Giddy Grocer',\n        travelTime: 1203,\n        workTime: 'Open Now | Closes 7:00PM',\n        address: '27 Well St, Hackney',\n        crowd: [3, 4, 5, 2, 1, 0],\n        inStock: '5/5',\n      }\n    ]\n  }\n\n  selectShop = () => {\n    console.log(this.map.googleMap);\n  }\n\n  render() {\n    return (\n      <div>\n        <ShopsMap markers={this.state.shops} ref={this.map}/>\n        <div className=\"bottom-curtain\">\n          <div className=\"bottom-curtain-content\">\n            {this.state.shops.map(s => {\n              return (\n                <div className=\"bottom-curtain-list-item\" onClick={() => this.selectShop(s)}>\n                  <div style={{flexGrow: 1}}>\n                    <div>\n                      <Typography variant=\"body1\">{s.name}</Typography>\n                    </div>\n                    <div>\n                      <Typography color=\"textSecondary\" variant=\"caption\">{s.workTime}</Typography>\n                    </div>\n                    <div>\n                      <Typography color=\"textSecondary\" variant=\"caption\">{s.address}</Typography>\n                    </div>\n                    <div>\n                      <Typography color=\"textSecondary\" variant=\"caption\">Crowd:</Typography>\n                      {s.crowd.map((cv) => (\n                        <div style={{\n                          marginLeft: 1,\n                          width: 2,\n                          height: cv * 2,\n                          display: 'inline-block',\n                          backgroundColor: `rgb(${cv*30}, ${255 - cv*50}, 20)`\n                        }}/>\n                      ))}\n                    </div>\n                  </div>\n                  <div>\n                    <div>\n                      <Typography color=\"textSecondary\" variant=\"caption\">Travel time</Typography>\n                      <Typography color=\"secondary\">{s.travelTime}</Typography>\n                    </div>\n                    <Divider/>\n                    <div>\n                      <Typography color=\"textSecondary\" variant=\"caption\">Availability</Typography>\n                      <Typography color=\"secondary\">{s.inStock}</Typography>\n                    </div>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport { Typography } from '@material-ui/core'\nimport useStyles from '../classes'\n\nexport default function CheckboxesGroup() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    milk: false,\n    bread: false,\n    paper: false,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const { milk, bread, paper } = state;\n\n  return (\n    <div className={[classes.verticalFlex]}>\n      <h2><Typography color=\"\" variant=\"h5\">What items do you want to buy?</Typography></h2>\n      <FormGroup className={[classes.formGroup, classes.flexItemMain]}>\n        <FormControlLabel\n          control={<Checkbox color=\"primary\" checked={milk} onChange={handleChange} name=\"milk\" />}\n          label=\"Eggs\"\n        />\n        <FormControlLabel\n          control={<Checkbox color=\"primary\" checked={bread} onChange={handleChange} name=\"bread\" />}\n          label=\"Pasta\"\n        />\n        <FormControlLabel\n          control={<Checkbox color=\"primary\" checked={paper} onChange={handleChange} name=\"paper\" />}\n          label=\"Toilet rolls\"\n        />\n      </FormGroup>\n\n      <FormGroup className={classes.formGroup}>\n        <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/stores\">\n          Continue\n        </Button>\n        <FormControlLabel\n          control={<Checkbox  color=\"primary\" onChange={handleChange} name=\"checkedA\" />}\n          label=\"Save this list for future\"\n        />\n      </FormGroup>\n    </div>\n  );\n}\n","import { createMuiTheme } from '@material-ui/core'\n\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: '#E25F3E',\n      dark: '#B99471',\n      light: '#F0E4D7'\n    },\n    secondary: {\n      main: '#5156B5',\n      dark: '#353BA8',\n      light: '#777CCB'\n    },\n    background: {\n      paper: 'rgba(250, 248, 248, 0.92)'\n    },\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        borderRadius: 30\n      }\n    },\n    MuiButtonBase: {\n      root: {\n        borderRadius: 30\n      }\n    }\n  },\n})","import React from 'react'\nimport { Route, Router } from 'react-router-dom'\nimport './App.css';\nimport Header from './components/Header'\nimport { ThemeProvider } from '@material-ui/styles'\nimport MainPage from './pages/main'\nimport ShoppingList from './pages/ShoppingList'\nimport { createBrowserHistory } from 'history'\nimport ShopsMapPage from './pages/ShopsMapPage'\nimport Home from './pages/home'\nimport theme from './theme'\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href')\nconst history = createBrowserHistory({ basename: baseUrl })\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router history={history}>\n        <div className=\"App\">\n          <div className=\"page-content\">\n            <Route exact path='/' component={MainPage}/>\n            <Route exact path='/home' component={Home}/>\n            <Route exact path='/stores' component={ShopsMapPage}/>\n            <Route exact path='/list' component={ShoppingList}/>\n          </div>\n          <Header/>\n        </div>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}